@page "/EditChart"

@inject BlitBot.Data.ChartService c
@inject HttpClient httpClient

@using Blazored.Typeahead

<PageTitle>BlitBot Config</PageTitle>

<h1>Config</h1>


<EditForm Model="search">
    
    <InputRadioGroup @bind-Value="search.Type">
        @foreach (var type in Types)
        {
            <label>
                @type
                <InputRadio Value="@type" checked="@(search.Type.Equals(@type))"/>
            </label>
        }
    </InputRadioGroup>


    <BlazoredTypeahead SearchMethod="SearchSymbols"
                       TValue="ExchangeSymbol"
                       TItem="ExchangeSymbol"
                       Value="SelectedSymbol"
                       ValueChanged="SelectedResultChanged"
                       ValueExpression="@(() => SelectedSymbol)"> 
        <SelectedTemplate Context="TypeAheadContext">
            @TypeAheadContext.Exchange:@TypeAheadContext.Symbol
        </SelectedTemplate>
        <ResultTemplate Context="TypeAheadContext">
            @TypeAheadContext.Exchange:@TypeAheadContext.Symbol (@TypeAheadContext.Description)
        </ResultTemplate>
    </BlazoredTypeahead>
</EditForm>    

@code 
{
    private IEnumerable<string> Types = new[] { "all", "stock", "futures", "forex", "crypto", "index", "bond", "economy" };
    private string SelectedType;
    private List<ExchangeSymbol> ExchangeSymbols;
    private ExchangeSymbol SelectedSymbol;

    SearchModel search = new SearchModel { Type = "all" };

    private async Task<IEnumerable<ExchangeSymbol>> SearchSymbols(string searchText)
    {
        var searchType = search.Type == "all" ? null : search.Type;
        return await httpClient.GetFromJsonAsync<List<ExchangeSymbol>>($"https://symbol-search.tradingview.com/symbol_search/?text={searchText}&type={searchType}");
    }
    
    private async Task SelectedResultChanged(ExchangeSymbol s)
    {
        SelectedSymbol = s;
        c.config.Symbol = s.Symbol;
        c.config.Updated();
    }

    class SearchModel
    {
        public string Type { get; set; }
    }

    class ExchangeSymbol
    {
        public string Symbol { get; set; }
        public string Description { get; set; }
        public string Type { get; set; }
        public string Exchange { get; set; }
        public string Provider_id { get; set; }
    }
}
